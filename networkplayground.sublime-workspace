{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"char",
				"charIdx	int"
			],
			[
				"for",
				"for(init-statement;condition;inc-expression){\nstatements\n}	KeyWord"
			],
			[
				"get",
				"GetBufferPtr"
			],
			[
				"Pro",
				"ProcessPacket(InputMemoryBitStream &inInputStream, const SocketAddress &inFromAddress)	void"
			],
			[
				"input",
				"inputStream"
			],
			[
				"em",
				"emplace(_Args &&__args...)	void"
			],
			[
				"tota",
				"totalBytesRead	int"
			],
			[
				"m",
				"mSocket"
			],
			[
				"game",
				"gameObject	GameObject ν"
			],
			[
				"up",
				"updateMessage	UpdateMessage ν"
			],
			[
				"New",
				"NewVector	core_lib.Vector2D ƒ"
			],
			[
				"pn",
				"physicsComponenet	core_lib.PhysicsComponent ν"
			],
			[
				"se",
				"SendMessage	error ƒ"
			],
			[
				"cli",
				"clientData	*Client ν"
			],
			[
				"raw",
				"rawJsonData	 ν"
			],
			[
				"rec",
				"rectData	core_lib.BaseRectData ν"
			],
			[
				"phy",
				"physicsSpace	core_lib.PhysicsSpace ν"
			],
			[
				"print",
				"Printf	 ƒ"
			],
			[
				"P",
				"PhysicsComponent	struct ʈ"
			],
			[
				"Ph",
				"PhysicsSpace	struct ʈ"
			],
			[
				"gameO",
				"gameObj	*PhysicsComponent ν"
			],
			[
				"gam",
				"gameObj	*PhysicsComponent ν"
			],
			[
				"floa",
				"float64	built-in ʈ"
			],
			[
				"flo",
				"float64	built-in ʈ"
			],
			[
				"ca",
				"canvasHeight〔variable〕"
			],
			[
				"sett",
				"settings〔variable〕"
			],
			[
				"pla",
				"player〔variable〕"
			],
			[
				"par",
				"parseNetworkGameObject"
			],
			[
				"obj",
				"object〔variable〕"
			],
			[
				"fun",
				"function〔keyword〕"
			],
			[
				"conn",
				"connectionData〔argument〕"
			],
			[
				"ne",
				"network	 package ρ"
			],
			[
				"s",
				"string	built-in ʈ"
			],
			[
				"clien",
				"clientData	network.ClientData ν"
			],
			[
				"prin",
				"Printf	 ƒ"
			],
			[
				"lo",
				"logger	 package ρ"
			],
			[
				"p",
				"Panicf	 ƒ"
			],
			[
				"pa",
				"Panicf	 ƒ"
			],
			[
				"Conn",
				"MakeConnectionMessage	Message ƒ"
			],
			[
				"con",
				"connectionMessage	network.Message ν"
			],
			[
				"make",
				"MakeConnectionMessage	Message ƒ"
			],
			[
				"clin",
				"clientData	 ν"
			],
			[
				"sen",
				"SendToClient	error ƒ"
			],
			[
				"client",
				"clientData	 ν"
			],
			[
				"clie",
				"clientData	*network.ClientData ν"
			],
			[
				"Me",
				"Message	struct ʈ"
			],
			[
				"Mess",
				"MessageQueue	struct ʈ"
			],
			[
				"new",
				"newClient	ClientData ν"
			],
			[
				"in",
				"InputQueue	[]Message ν"
			],
			[
				"Cli",
				"ClientData	struct ʈ"
			],
			[
				"Prin",
				"Println	 ƒ"
			],
			[
				"web",
				"websockethandler	 package ρ"
			],
			[
				"Ad",
				"AddNewPlayer	Player ƒ"
			],
			[
				"gae",
				"gameObjects	map[string]GameObject ν"
			],
			[
				"ba",
				"BaseRectMessage	struct ʈ"
			],
			[
				"build",
				"buildBaseRectData	MessageRectData ƒ"
			],
			[
				"Oj",
				"ObjectRectData	struct ʈ"
			],
			[
				"ob",
				"ObjectRectData	struct ʈ"
			],
			[
				"Ob",
				"ObjectRectData	struct ʈ"
			],
			[
				"event",
				"eventMessage	Message ν"
			],
			[
				"broa",
				"broadcastMessages	[]Message ν"
			],
			[
				"syn",
				"syncDataBytes	[]byte ν"
			],
			[
				"mess",
				"message2	Message ν"
			],
			[
				"sy",
				"syncDataBytes	[]byte ν"
			],
			[
				"mes",
				"messageJson	[]byte ν"
			],
			[
				"bro",
				"broadcastBytes	[]byte ν"
			],
			[
				"br",
				"broadcastBytes	[]byte ν"
			],
			[
				"even",
				"event	Message ν"
			],
			[
				"add",
				"addBytes	[]byte ν"
			],
			[
				"upda",
				"UpdateMessage	struct ʈ"
			],
			[
				"update",
				"updateBytes	[]byte ν"
			],
			[
				"eventa",
				"eventName	string ν"
			],
			[
				"UPdate",
				"UpdateMessage	struct ʈ"
			],
			[
				"test",
				"testSlice	[]Test ν"
			],
			[
				"Tes",
				"Tester	struct ʈ"
			],
			[
				"g",
				"GameObjects	map[string]GameObject ν"
			],
			[
				"i",
				"sourceId	int ν"
			],
			[
				"eve",
				"eventSourceId	int ν"
			],
			[
				"c",
				"client	*websocket.Conn ν"
			],
			[
				"cl",
				"clients	map[*websocket.Conn]ClientData ν"
			],
			[
				"pro",
				"ProcessObjectEvents	string ƒ"
			],
			[
				"Pr",
				"Printf	 ƒ"
			],
			[
				"Syn",
				"SyncMessage	struct ʈ"
			],
			[
				"ru",
				"runHttpServer	 ƒ"
			],
			[
				"run",
				"runInteractiveMode	 ƒ"
			],
			[
				"err",
				"Error	*log.Logger ν"
			],
			[
				"a",
				"RemoteAddr	net.Addr ƒ"
			],
			[
				"set",
				"SetOutput	 ƒ"
			],
			[
				"Upd",
				"UpdateMessage	struct ʈ"
			],
			[
				"Add",
				"AddRequest	struct ʈ"
			],
			[
				"Up",
				"UpdateMessage	struct ʈ"
			],
			[
				"updat",
				"updateBytes	[]byte ν"
			],
			[
				"json",
				"jsonData	 ν"
			],
			[
				"Co",
				"channelCoordinator	ComunicationChannels ν"
			],
			[
				"time",
				"timeStep	float64 ν"
			],
			[
				"ph",
				"PhysicsLoop	 ƒ"
			],
			[
				"Tick",
				"Ticker	struct ʈ"
			],
			[
				"pr",
				"Println	n int, err error ƒ"
			],
			[
				"move",
				"moveChannel	chan MoveRequest ν"
			],
			[
				"Read",
				"ReadCreatePlayerEvent	Player ƒ"
			],
			[
				"data",
				"dataMessage	AddRequest ν"
			],
			[
				"Move",
				"MoveRequest	struct ʈ"
			],
			[
				"Moev",
				"MoveRequest	struct ʈ"
			],
			[
				"Cle",
				"ClientMessage	struct ʈ"
			],
			[
				"ini",
				"initializeConnectionData	 ƒ"
			],
			[
				"imp",
				"import	import (...) ʂ"
			],
			[
				"Make",
				"MakePlayerObjectFromJson	Player ƒ"
			],
			[
				"Play",
				"PlayerControlledObject	interface ¡"
			],
			[
				"pl",
				"PlayerControlledObject	interface ¡"
			],
			[
				"Game",
				"GameObject	interface ¡"
			],
			[
				"Physi",
				"PhysicsComponent	struct ʈ"
			],
			[
				"Bas",
				"BasePhysicsObjData	struct ʈ"
			],
			[
				"PLay",
				"PlayerControlledObject	interface ¡"
			],
			[
				"send",
				"sendMoveEvent"
			],
			[
				"key",
				"keyListener"
			],
			[
				"fu",
				"function"
			],
			[
				"Mo",
				"MovableObject	struct ʈ"
			],
			[
				"x",
				"XVel	int ν"
			],
			[
				"no",
				"Now	time.Time ƒ"
			],
			[
				"debu",
				"debugNetwork"
			],
			[
				"de",
				"debugDraw"
			],
			[
				"frame",
				"frameId"
			],
			[
				"this",
				"thisFrameFPS"
			],
			[
				"fram",
				"frameId"
			],
			[
				"last",
				"lastDrawUpdate"
			],
			[
				"drawF",
				"drawingFps"
			],
			[
				"do",
				"document"
			],
			[
				"Ni",
				"NeighborServerList	struct ʈ"
			]
		]
	},
	"buffers":
	[
		{
			"file": "networkplayground.sublime-project",
			"settings":
			{
				"buffer_size": 399,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 2301,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "//\n//  NetworkManager.h\n//  networkplayground\n//\n// typedef unordered_map< int, ClientProxyPtr >    IntToClientMap;\n// typedef unordered_map< SocketAddress, ClientProxyPtr >  AddressToClientMap;\n\n\n//typedef unordered_map< int, GameObjectPtr > IntToGameObjectMap;\nclass NetworkManager\n{\npublic:\n     // 4 byte message identifier\n    static const uint32_t   kHelloCC = 'HELO'; // client connect message\n    static const uint32_t   kWelcomeCC = 'WLCM'; // server welcome message\n    \n    NetworkManager();\n    virtual ~NetworkManager();\n    \n    bool Init( uint16_t inPort );\n    void ProcessIncomingPackages();\n    virtual void ProcessPacket( InputMemoryBitStream& inInputStream, const SocketAddress& inFromAddress );\n    \n    void SendPacket( const OutputMemoryBitStream& inOutputStream, const SocketAddress& inFromAddress);\n    \n    void ReadIncomingPacketsIntoQueue();\n    void ReadIncomingPacket();\n    void ProcessQueuedPackets();\n  \nprivate:\n\n    /**\n     * Inner class to represent a received packet\n     */\n    class ReceivedPacket\n    {\n    public:\n        ReceivedPacket( float inRecievedTime,\n                        InputMemoryBitStream& inInputMemoryBitStream,\n                        const SocketAddress& inAddress );\n\n        // get the address this packet came from\n        const SocketAddress& GetFromAddress() const { return mFromAddress; }\n\n        // When was this packet received\n        float GetRecievedTime() const { return mRecievedTime; }\n\n        // Get the stream of  packet data\n        InputMemoryBitStream& GetPacketBuffer() { return mPacketDataStream; }\n\n    private:\n        float                 mRecievedTime;\n        InputMemoryBitStream  mPacketDataStream;\n        SocketAddress         mFromAddress;\n    };\n\n    UDPSocketPtr	mSocket;\n    //\n    queue< ReceivedPacket, list< ReceivedPacket > > mPacketQueue;\n//    WeightedTimedMovingAverage	mBytesReceivedPerSecond;\n//    WeightedTimedMovingAverage	mBytesSentPerSecond;\n};\n",
			"file": "networkplayground/include/networking/NetworkManager.h",
			"file_size": 1811,
			"file_write_time": 131023729630000000,
			"settings":
			{
				"buffer_size": 1958,
				"line_ending": "Unix"
			}
		},
		{
			"file": "networkplayground/src/networking/NetworkManager.cpp",
			"settings":
			{
				"buffer_size": 5157,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test_commands.sh",
			"settings":
			{
				"buffer_size": 60,
				"line_ending": "Unix"
			}
		},
		{
			"file": "networkplaygroundserver/src/main.cpp",
			"settings":
			{
				"buffer_size": 700,
				"line_ending": "Unix"
			}
		},
		{
			"file": "networkplayground/src/timing/Timing.cpp",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "networkplayground/include/timing/timing.h",
			"settings":
			{
				"buffer_size": 566,
				"line_ending": "Unix"
			}
		},
		{
			"file": "networkplayground/src/networking/SocketAddress.cpp",
			"settings":
			{
				"buffer_size": 481,
				"line_ending": "Unix"
			}
		},
		{
			"file": "networkplayground/include/IO/MemoryBitStream.h",
			"settings":
			{
				"buffer_size": 5256,
				"line_ending": "Unix"
			}
		},
		{
			"file": "scratch.cpp",
			"settings":
			{
				"buffer_size": 7500,
				"line_ending": "Unix"
			}
		},
		{
			"file": "networkplayground/include/networking/SocketAddress.h",
			"settings":
			{
				"buffer_size": 1886,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Run Test",
	"build_system_choices":
	[
		[
			[
				[
					"List",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"List",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		],
		[
			[
				[
					"Run TTest",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Run TTest",
				""
			]
		],
		[
			[
				[
					"Run Test",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Run Test",
				""
			]
		],
		[
			[
				[
					"Run Test",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Run Test",
				""
			]
		],
		[
			[
				[
					"Run Tests",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Run Tests",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"them",
				"Colorsublime: Browse Themes"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"package lis",
				"Package Control: List Packages"
			],
			[
				"copypa",
				"File: Copy Path"
			],
			[
				"copy",
				"File: Copy Name"
			],
			[
				"set c+",
				"Set Syntax: C++"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"gosu",
				"GoSublime: Run build command"
			],
			[
				"nrew",
				"File: New File Relative to Current View"
			],
			[
				"set c++",
				"Set Syntax: C++"
			],
			[
				"renam",
				"File: Rename"
			],
			[
				"uper",
				"Convert Case: Upper Case"
			],
			[
				"todo",
				"TodoReview: Project Files"
			],
			[
				"gosub",
				"GoSublime: Activate 9o"
			],
			[
				"go",
				"GoSublime: Open Error Log"
			],
			[
				"tdo",
				"TodoReview: Open Files"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"ren",
				"Preferences: Settings - Default"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"move",
				"File: Move"
			],
			[
				"waka",
				"WakaTime: Open Dashboard"
			],
			[
				"trail",
				"Trailing Spaces: Toggle Trailing Spaces Highlighting"
			],
			[
				"ke",
				"Keymaps: Cheat Sheet"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"dele",
				"Trailing Spaces: Delete Trailing Spaces"
			],
			[
				"sync",
				"Package Syncing: Pull Settings"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"disb",
				"Package Control: Disable Package"
			],
			[
				"htmlr",
				"Set Syntax: HTML (Erlang)"
			],
			[
				"h",
				"HTMLBeautify"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"go ",
				"GoSublime: Open Error Log"
			],
			[
				"gosett",
				"GoSublime: User Settings"
			],
			[
				"insal",
				"Package Control: Install Package"
			]
		],
		"width": 568.0
	},
	"console":
	{
		"height": 444.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/erikparreira/Dropbox/Programming/networkplayground",
		"/Users/erikparreira/Dropbox/Programming/networkplayground/networkplaygroundserver"
	],
	"file_history":
	[
		"/Applications/Sublime Text.app/Contents/MacOS/Packages/C++.sublime-package",
		"/Users/erikparreira/Dropbox/Programming/networkplayground/networkplayground/src/networking/NetworkManager.cpp",
		"/Users/erikparreira/Dropbox/Programming/networkplayground/networkplayground/src/networking/SocketAddressFactory.cpp",
		"/Users/erikparreira/Dropbox/Programming/networkplayground/networkplayground.sublime-project",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/Clang-Complete/cc.sublime-settings",
		"/Users/erikparreira/Dropbox/Programming/networkplayground/networkplayground/src/networking/SocketAddress.cpp",
		"/Users/erikparreira/Dropbox/Programming/networkplayground/networkplayground/include/networking/SocketAddress.h",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/GoSublime/CHANGELOG.md",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/game/client_handlers.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/core_lib/game_objs.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/web/js/game.js",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/core_lib/basic_physics.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/game/client_messages.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/game/game.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/network/clients.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/game/game_loop.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/game/game_objs.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/web/js/simple_actor.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/backend/main.go",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/communication_layer.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/network/messages.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/network/websockethandler.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/core_lib/utils.go",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/game.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/web/index.html",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/game_loop.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/web/js/connection.js",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/web/js/settings.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/game_objs.go",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/core_lib.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/core_lib/core_lib.go",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/messages.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/logger/logger.go",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/server_handlers.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/websockethandler/websockethandler.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/build.sh",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/web/js/ws_events_dispatcher.js",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/User/GoSublime.sublime-settings",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/client_handlers.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/core/physics_component.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/core/game_objs.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/websockethandler.go/websockethandler.go",
		"/Users/erikparreira/go/src/github.com/etinlb/falcon/core/core_lib.go",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/GoSublime/GoSublime.sublime-settings",
		"/Users/erikparreira/Dropbox/go_env/install_go.sh",
		"/Users/erikparreira/Downloads/Spending.csv",
		"/Users/erikparreira/Dropbox/goStuff/vagrant-golang/Vagrantfile",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/message_structure.md",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/messaging_notes.md",
		"/Users/erikparreira/Dropbox/Programming/Silly shit/prank_scrips.sh",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/web/js/game.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/web/js/utils.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/web/js/simple_actor.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/web/js/ws_events_dispatcher.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/web/js/unit_manager.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/master_server/master_server.go",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/interactive_view.go",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/.gitignore",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/web/index.html",
		"/Users/erikparreira/Dropbox/Generic_Card_Deck_Design.md",
		"/Users/erikparreira/Dropbox/Tech_Things_To_Do.md",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/temp/test.go",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/logger.go",
		"/Users/erikparreira/Downloads/TopApps-Starter/TopApps/DataManager.swift",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/design_doc.md",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/web/js/settings.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/sample.go",
		"/Users/erikparreira/Desktop/test.go",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/User/GoSublime/osx-x64/log.txt",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/master_server/server_list.json",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/game/game",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/master_server/master_server",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/unit_manager.js",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/ws_events_dispatcher.js",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/simple_actor.js",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/styles.css",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/globals.js",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/backend/game_objs.go",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/settings.js",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/backend/main.go",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/index.html",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/game_state.js",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/game.js",
		"/Users/erikparreira/go/src/github.com/etinlb/go_game/backend/game_objs.go",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/unit.js",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/utility.js",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/README",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/GoSublime/USAGE.md",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/connection.js",
		"/Users/erikparreira/Dropbox/goStuff/websocket/main.go",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/web/index.html",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/backend/main.go",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/backend/game_objs.go",
		"/Users/erikparreira/Dropbox/goStuff/go_experiment/web/js/game_old.js",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/web/js/globals.js",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/web/js/connection.js",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/web/js/simple_actor.js",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/web/js/game_state.js",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/web/chat.html",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/web/js/unit.js",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/main.go",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/.gitignore",
		"/Users/erikparreira/Dropbox/goStuff/websocket/home.html",
		"/Users/erikparreira/Dropbox/goStuff/chat_tutorial/web/test.html",
		"/Users/erikparreira/Library/Application Support/Sublime Text 3/Packages/BracketHighlighter/bh_core.sublime-settings",
		"/Users/erikparreira/Dropbox/Programming/sublime_sync/Package Control.sublime-settings",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/channelTut.go",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/goChatServer.go",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/simple_server.go",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/server_request.js",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/static/view.html",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/static/edit.html",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/test.txt",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/static/test.txt",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/hub.go",
		"/Users/erikparreira/Dropbox/goStuff/Sandbox/websocket_server.go"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"inc",
			"bufferSize",
			"),\n",
			"printStream",
			"tests",
			"ProcessQueuedPackets",
			"3200",
			"CLIENT_OBJ_FILES",
			"SERVER_OBJ_FILES",
			"CLIENT_OBJ_FILES",
			"WSAECONNRESET",
			"ReadIncomingPacketsIntoQueue",
			"NetworkManager",
			"yAxis",
			"X",
			"messages",
			"move",
			"ReadAllInputMessages",
			"Queueing",
			"ReadAllInputMessages",
			"NewQueue",
			"clientIdMap",
			"ReadAllInputMessages",
			"messages",
			"logger",
			"fmt.print",
			"print",
			"Info",
			"Printf",
			"NewPlayer",
			"Location",
			"updatePositionFromPacket",
			"updateRemoteObjects",
			"veloctiy",
			"Velocity",
			"rectData",
			"Events",
			"conn",
			"msg",
			"conn",
			"AddPhysicsComp",
			"GameObject",
			"object",
			"player",
			"Player",
			"AddPlayerObjectToWorld",
			"gameObjects",
			"addChannel",
			"rawClientData",
			"client",
			"location",
			"Location",
			"gameObjects",
			"ReadMoveMessage",
			"gameObjedct",
			"core_lib",
			"BaseGameObjData",
			"core_lib",
			"struct",
			"Update",
			"Move",
			"BaseRectData",
			"Printf",
			"Before",
			"Trace",
			"gameObj",
			"physicsComponents",
			"gameObjects",
			"Panicf",
			"PhysicsComponent",
			"core_lib",
			"network",
			"physicsComponents",
			"comp",
			"AddPhysicsComp",
			"height",
			"width",
			"physicsComponents",
			"physicsCompMap",
			"physicsComponents",
			"TickPhysics",
			"network",
			"NewPhysicsSpace",
			"PhysicsComponent",
			"Dimensions",
			"PhysicsSpace",
			"int",
			"float64",
			"AddPhysicsComp",
			"physicsComponents",
			"Dimensions",
			"PhysicsSpace",
			"Gravity",
			"Dimensions",
			"Force",
			"network",
			"Connection",
			"ServerConnection",
			"handleInitialConnection",
			"connection",
			"object",
			"getting",
			"xVel",
			"location",
			"x",
			"PhysicsComp",
			"game",
			"Game",
			"handleInitialConnection",
			"InitLogger",
			"createPlayer",
			"client",
			"AddClientDataToMap",
			"network.",
			"clientData",
			"AddClientDataToMap",
			"clientData",
			"NetworkedGameObjects",
			"fmt",
			"UniqueShortId",
			"Player",
			"AddClientIdToMap",
			"AddClientDataToMap",
			"ClientId",
			"int",
			"AddClientDataToMap",
			"clientIdMap",
			"AddClientDataToMap"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "networkplayground.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 399,
						"regions":
						{
						},
						"selection":
						[
							[
								245,
								391
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"function_name_status_row": 15,
							"history_list_is_closing": true,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JSON (JavaScriptNext).tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2301,
						"regions":
						{
						},
						"selection":
						[
							[
								629,
								629
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 48,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 327.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "networkplayground/include/networking/NetworkManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1958,
						"regions":
						{
						},
						"selection":
						[
							[
								755,
								755
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 23,
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 30.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "networkplayground/src/networking/NetworkManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5157,
						"regions":
						{
						},
						"selection":
						[
							[
								151,
								151
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"function_name_status_row": 6,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test_commands.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60,
						"regions":
						{
						},
						"selection":
						[
							[
								60,
								60
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 2,
							"open_with_edit": true,
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "networkplaygroundserver/src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 700,
						"regions":
						{
						},
						"selection":
						[
							[
								403,
								403
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 25,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "networkplayground/src/timing/Timing.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 0,
							"open_with_edit": true,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "networkplayground/include/timing/timing.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 566,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								566
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 0,
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "networkplayground/src/networking/SocketAddress.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 481,
						"regions":
						{
						},
						"selection":
						[
							[
								412,
								412
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 18,
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "networkplayground/include/IO/MemoryBitStream.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5256,
						"regions":
						{
						},
						"selection":
						[
							[
								3662,
								3662
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 128,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1880.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 10,
					"file": "scratch.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7500,
						"regions":
						{
						},
						"selection":
						[
							[
								417,
								417
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 14,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2301,
						"regions":
						{
						},
						"selection":
						[
							[
								1655,
								1655
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 48,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 448.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "networkplayground/src/networking/NetworkManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5157,
						"regions":
						{
						},
						"selection":
						[
							[
								285,
								285
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 75,
							"syntax": "Packages/C++11/C++11.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "networkplayground/include/networking/NetworkManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1958,
						"regions":
						{
						},
						"selection":
						[
							[
								52,
								195
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 23,
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "networkplayground/include/networking/SocketAddress.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1886,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "networkplayground/src/networking/SocketAddress.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 481,
						"regions":
						{
						},
						"selection":
						[
							[
								481,
								481
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"function_name_status_row": 18,
							"syntax": "Packages/C++11/C++11.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///Users/erikparreira/Dropbox/goStuff/Sandbox":
	{
		"height": 100.0
	},
	"output.9o:///Users/erikparreira/Dropbox/goStuff/go_experiment/backend":
	{
		"height": 100.0
	},
	"output.9o:///Users/erikparreira/go/src/github.com/etinlb/falcon/core":
	{
		"height": 124.0
	},
	"output.9o:///Users/erikparreira/go/src/github.com/etinlb/falcon/core_lib":
	{
		"height": 243.0
	},
	"output.9o:///Users/erikparreira/go/src/github.com/etinlb/falcon/game":
	{
		"height": 252.0
	},
	"output.9o:///Users/erikparreira/go/src/github.com/etinlb/falcon/logger":
	{
		"height": 124.0
	},
	"output.9o:///Users/erikparreira/go/src/github.com/etinlb/falcon/network":
	{
		"height": 189.0
	},
	"output.9o:///Users/erikparreira/go/src/github.com/etinlb/falcon/websockethandler":
	{
		"height": 124.0
	},
	"output.9o:///Users/erikparreira/go/src/github.com/etinlb/falcon/websockethandler.go":
	{
		"height": 124.0
	},
	"output.9o:///Users/erikparreira/go/src/github.com/etinlb/go_game/game":
	{
		"height": 280.0
	},
	"output.GoSublime-main-output":
	{
		"height": 124.0
	},
	"output.MarGo-output":
	{
		"height": 100.0
	},
	"output.cc":
	{
		"height": 308.0
	},
	"output.exec":
	{
		"height": 371.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "networkplayground.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"netowkrmana",
				"networkplayground/include/networking/NetworkManager.h"
			],
			[
				"socketad",
				"networkplayground/src/networking/SocketAddress.cpp"
			],
			[
				"socekt",
				"networkplayground/include/networking/SocketAddress.h"
			],
			[
				"networkmana",
				"networkplayground/src/networking/NetworkManager.cpp"
			],
			[
				"meme",
				"networkplayground/include/IO/MemoryBitStream.h"
			],
			[
				"main",
				"networkplaygroundserver/src/main.cpp"
			],
			[
				"netowrkmana",
				"networkplayground/include/networking/NetworkManager.h"
			],
			[
				"ma",
				"networkplaygroundserver/src/main.cpp"
			],
			[
				"network",
				"networkplayground/src/networking/NetworkManager.cpp"
			],
			[
				"make",
				"Makefile"
			],
			[
				"netwrokmana",
				"networkplayground/src/networking/NetworkManager.cpp"
			],
			[
				"scr",
				"scratch.cpp"
			],
			[
				"netowrkingmana",
				"networkplayground/include/networking/NetworkManager.h"
			],
			[
				"client",
				"falcon/game/client_handlers.go"
			],
			[
				"physics",
				"falcon/core_lib/basic_physics.go"
			],
			[
				"gameo",
				"falcon/game/game_objs.go"
			],
			[
				"clientha",
				"falcon/game/client_handlers.go"
			],
			[
				"game.go",
				"falcon/game/game.go"
			],
			[
				"game_loo",
				"falcon/game/game_loop.go"
			],
			[
				"gameloo",
				"falcon/game/game_loop.go"
			],
			[
				"game.js",
				"falcon/web/js/game.js"
			],
			[
				"client_me",
				"falcon/game/client_messages.go"
			],
			[
				"clie",
				"falcon/game/client_handlers.go"
			],
			[
				"mess",
				"falcon/network/messages.go"
			],
			[
				"game_ob",
				"falcon/game/game_objs.go"
			],
			[
				"gameobj",
				"falcon/core_lib/game_objs.go"
			],
			[
				"game_lo",
				"falcon/game/game_loop.go"
			],
			[
				"game_o",
				"falcon/core_lib/game_objs.go"
			],
			[
				"game",
				"falcon/game/game_loop.go"
			],
			[
				"basi",
				"falcon/core_lib/basic_physics.go"
			],
			[
				"game.",
				"go_game/game/game_loop.go"
			],
			[
				"basic",
				"falcon/core_lib/basic_physics.go"
			],
			[
				"gameob",
				"falcon/core_lib/game_objs.go"
			],
			[
				"index",
				"falcon/web/index.html"
			],
			[
				"webso",
				"falcon/network/websockethandler.go"
			],
			[
				"clienth",
				"falcon/game/client_handlers.go"
			],
			[
				"inde",
				"falcon/web/index.html"
			],
			[
				"clei",
				"falcon/network/clients.go"
			],
			[
				"networ",
				"falcon/network/clients.go"
			],
			[
				"corli",
				"go_game/game/core_lib.go"
			],
			[
				"clients",
				"falcon/network/clients.go"
			],
			[
				"clien",
				"falcon/game/client_handlers.go"
			],
			[
				"web",
				"falcon/network/websockethandler.go"
			],
			[
				"",
				"falcon/network/clients.go"
			],
			[
				"gamelo",
				"falcon/game/game_loop.go"
			],
			[
				"gamel",
				"falcon/game/game_loop.go"
			],
			[
				"messages",
				"go_game/game/messages.go"
			],
			[
				"messages.go",
				"game/messages.go"
			],
			[
				"message",
				"message_structure.md"
			],
			[
				"comm",
				"game/communication_layer.go"
			],
			[
				"mes",
				"game/messages.go"
			],
			[
				"han",
				"game/client_handlers.go"
			],
			[
				"handle",
				"game/client_handlers.go"
			],
			[
				"handl",
				"game/client_handlers.go"
			],
			[
				"g",
				"game/game.go"
			],
			[
				"game_og",
				"game/game_objs.go"
			],
			[
				"me",
				"game/messages.go"
			],
			[
				"com",
				"game/communication_layer.go"
			],
			[
				"commu",
				"game/communication_layer.go"
			],
			[
				"ws",
				"web/js/ws_events_dispatcher.js"
			],
			[
				"units",
				"web/js/unit_manager.js"
			],
			[
				"simpl",
				"web/js/simple_actor.js"
			],
			[
				"master",
				"master_server/master_server.go"
			],
			[
				"gaemloo",
				"game/game_loop.go"
			],
			[
				"gam",
				"game/game.go"
			],
			[
				"gmae",
				"game/game.go"
			],
			[
				"simple",
				"web/js/simple_actor.js"
			],
			[
				"uti",
				"web/js/utils.js"
			],
			[
				"index.",
				"web/index.html"
			],
			[
				"log",
				"game/logger.go"
			],
			[
				"game.sj",
				"web/js/game.js"
			],
			[
				"backen",
				"backend/main.go"
			],
			[
				"backe",
				"backend/main.go"
			],
			[
				"co",
				"game/communication_layer.go"
			],
			[
				"gmaeoj",
				"game/game_objs.go"
			],
			[
				"backend",
				"backend/main.go"
			],
			[
				"gameoj",
				"game/game_objs.go"
			],
			[
				"game_l",
				"game/game_loop.go"
			],
			[
				"back",
				"backend/main.go"
			],
			[
				"cl",
				"game/client_handlers.go"
			],
			[
				"w",
				"web/js/ws_events_dispatcher.js"
			],
			[
				"si",
				"web/js/simple_actor.js"
			],
			[
				"cli",
				"game/client_handlers.go"
			],
			[
				"messa",
				"game/messages.go"
			],
			[
				"settings",
				"web/js/settings.js"
			],
			[
				"server",
				"game/server_handlers.go"
			],
			[
				"clienthan",
				"game/client_handlers.go"
			],
			[
				"game_loop",
				"game/game_loop.go"
			],
			[
				"maser",
				"master_server/master_server.go"
			],
			[
				"rea",
				"go_experiment/README.md"
			],
			[
				"utisl",
				"go_experiment/web/js/utility.js"
			],
			[
				"uni",
				"go_experiment/web/js/unit.js"
			],
			[
				"sty",
				"go_experiment/web/styles.css"
			],
			[
				"games",
				"go_experiment/web/js/game_state.js"
			],
			[
				"style",
				"go_experiment/web/styles.css"
			],
			[
				"glo",
				"chat_tutorial/web/js/globals.js"
			],
			[
				"chat",
				"chat_tutorial/web/chat.html"
			],
			[
				"unit",
				"chat_tutorial/web/js/unit.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Dropbox/Programming/networkplayground/networkplayground.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 227.0,
		"last_filter": "moveM",
		"selected_items":
		[
			[
				"moveM",
				"MoveMessage"
			],
			[
				"move",
				"MoveMessage"
			],
			[
				"player",
				"Player"
			],
			[
				"mes",
				"Message"
			],
			[
				"newPLa",
				"NewPlayer"
			],
			[
				"newPla",
				"NewPlayer"
			],
			[
				"addgame",
				"AddGameObject"
			],
			[
				"baseR",
				"BaseRectMessage"
			],
			[
				"Update",
				"UpdateMessage"
			],
			[
				"addphy",
				"AddPhysicsComp"
			],
			[
				"addph",
				"AddPhysicsComp"
			],
			[
				"newcli",
				"NewClient"
			],
			[
				"Netw",
				"NetworkedGameObjects"
			],
			[
				"Pl",
				"Player"
			],
			[
				"clie",
				"ClientData"
			],
			[
				"clei",
				"ClientData"
			],
			[
				"newBa",
				"NewBackendController"
			],
			[
				"syn",
				"SyncClient"
			],
			[
				"syc",
				"SyncClient"
			],
			[
				"message",
				"Message"
			],
			[
				"mess",
				"Message"
			],
			[
				"build",
				"BuildAddMessage"
			],
			[
				"clien",
				"ClientData"
			],
			[
				"addme",
				"AddMessage"
			],
			[
				"pro",
				"ProcessEvents"
			],
			[
				"baseagme",
				"BaseGameObjData"
			],
			[
				"buildup",
				"BuildUpdateMessage"
			],
			[
				"sync",
				"SyncClient"
			],
			[
				"addUn",
				"addUnit: function( unit )"
			],
			[
				"cleanup",
				"cleanUpSocket"
			],
			[
				"readBr",
				"readBroadCastEvents"
			],
			[
				"broa",
				"broadCastGameObjects"
			],
			[
				"CLIENT",
				"ClientData"
			],
			[
				"cli",
				"ClientData"
			],
			[
				"addRe",
				"AddRequest"
			],
			[
				"updateEve",
				"UpdateEvent"
			],
			[
				"updat",
				"update: function()"
			],
			[
				"client",
				"ClientData"
			],
			[
				"update",
				"UpdateMessage"
			],
			[
				"addre",
				"AddRequest"
			],
			[
				"ob",
				"ObjectMessage"
			],
			[
				"Obje",
				"Object"
			],
			[
				"makeO",
				"MakeObjectFromJson"
			],
			[
				"make",
				"MakeObjectFromJson"
			],
			[
				"read",
				"ReadMoveMessage"
			],
			[
				"exclu",
				"ExcludeClient"
			],
			[
				"newgame",
				"NewGameObject"
			]
		],
		"width": 568.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 259.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
